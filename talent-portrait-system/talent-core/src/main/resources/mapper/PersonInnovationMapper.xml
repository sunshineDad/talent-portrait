<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cgn.talent.core.mapper.PersonInnovationMapper">

    <resultMap id="BaseResultMap" type="com.cgn.talent.core.entity.PersonInnovation">
        <id column="id" property="id"/>
        <result column="person_code" property="personCode"/>
        <result column="innovation_type" property="innovationType"/>
        <result column="innovation_name" property="innovationName"/>
        <result column="evaluation_score" property="evaluationScore"/>
        <result column="number" property="number"/>
        <result column="benchmark_score" property="benchmarkScore"/>
        <result column="create_by" property="createBy"/>
        <result column="create_time" property="createTime"/>
        <result column="update_by" property="updateBy"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 根据人员编号查询创新产出 -->
    <select id="selectInnovationByPersonCode" resultMap="BaseResultMap">
        SELECT
        pi.*,
        d.dict_label as innovation_type_name,
        YEAR(pi.create_time) as innovation_year
        FROM person_innovation pi
        LEFT JOIN sys_dict_data d ON pi.innovation_type = d.dict_value AND d.dict_type = 'innovation_type'
        WHERE pi.person_code = #{personCode}
        ORDER BY pi.create_time DESC
    </select>

    <!-- 批量插入创新产出 -->
    <insert id="batchInsertInnovation">
        INSERT INTO person_innovation (
        person_code, innovation_type, innovation_name, evaluation_score,
        number, benchmark_score, create_by, create_time
        ) VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.personCode}, #{item.innovationType}, #{item.innovationName}, #{item.evaluationScore},
            #{item.number}, #{item.benchmarkScore}, #{item.createBy}, NOW())
        </foreach>
    </insert>

    <!-- 删除人员的所有创新产出 -->
    <delete id="deleteInnovationByPersonCode">
        DELETE FROM person_innovation WHERE person_code = #{personCode}
    </delete>

    <!-- 按类型统计创新产出 -->
    <select id="selectInnovationStatisticsByType" resultType="map">
        SELECT
        pi.innovation_type,
        d.dict_label as innovation_type_name,
        COUNT(*) as count,
        SUM(CAST(pi.number AS SIGNED)) as total_number,
        SUM(CAST(pi.evaluation_score AS DECIMAL(10,2))) as total_score,
        AVG(CAST(pi.evaluation_score AS DECIMAL(10,2))) as avg_score
        FROM person_innovation pi
        LEFT JOIN sys_dict_data d ON pi.innovation_type = d.dict_value AND d.dict_type = 'innovation_type'
        WHERE pi.person_code = #{personCode}
        GROUP BY pi.innovation_type, d.dict_label
        ORDER BY total_score DESC
    </select>

    <!-- 查询团队创新产出统计 -->
    <select id="selectTeamInnovationStatistics" resultType="map">
        SELECT
        pi.innovation_type,
        d.dict_label as innovation_type_name,
        COUNT(DISTINCT pi.person_code) as person_count,
        COUNT(*) as innovation_count,
        SUM(CAST(pi.number AS SIGNED)) as total_number,
        SUM(CAST(pi.evaluation_score AS DECIMAL(10,2))) as total_score
        FROM person_innovation pi
        INNER JOIN person_info p ON pi.person_code = p.person_code
        LEFT JOIN sys_dict_data d ON pi.innovation_type = d.dict_value AND d.dict_type = 'innovation_type'
        WHERE p.del_flag = '0' AND p.status = '0'
        <if test="teamCode != null and teamCode != ''">
            AND p.team_code = #{teamCode}
        </if>
        <if test="year != null">
            AND YEAR(pi.create_time) = #{year}
        </if>
        GROUP BY pi.innovation_type, d.dict_label
        ORDER BY total_score DESC
    </select>

    <!-- 查询创新产出排名 -->
    <select id="selectInnovationRanking" resultType="map">
        SELECT
        p.person_code,
        p.person_name,
        p.job_title,
        d1.dict_label as job_title_name,
        COUNT(*) as innovation_count,
        SUM(CAST(pi.evaluation_score AS DECIMAL(10,2))) as total_score,
        GROUP_CONCAT(DISTINCT pi.innovation_type) as innovation_types
        FROM person_innovation pi
        INNER JOIN person_info p ON pi.person_code = p.person_code
        LEFT JOIN sys_dict_data d1 ON p.job_title = d1.dict_value AND d1.dict_type = 'job_title'
        WHERE p.del_flag = '0' AND p.status = '0'
        <if test="teamCode != null and teamCode != ''">
            AND p.team_code = #{teamCode}
        </if>
        <if test="innovationType != null and innovationType != ''">
            AND pi.innovation_type = #{innovationType}
        </if>
        GROUP BY p.person_code, p.person_name, p.job_title, d1.dict_label
        ORDER BY total_score DESC
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>

    <!-- 统计个人创新产出得分 -->
    <select id="selectPersonInnovationScore" resultType="map">
        SELECT
        COUNT(*) as total_count,
        SUM(CAST(evaluation_score AS DECIMAL(10,2))) as total_score,
        AVG(CAST(evaluation_score AS DECIMAL(10,2))) as avg_score,
        MAX(CAST(evaluation_score AS DECIMAL(10,2))) as max_score,
        COUNT(DISTINCT innovation_type) as type_count
        FROM person_innovation
        WHERE person_code = #{personCode}
    </select>
</mapper>
